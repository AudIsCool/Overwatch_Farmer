/*
*   Name:        RoundLogs.ostw
*   Author:      leguminote#5816
*   Description: This file holds the code to log round information
*/

import "./HelperFunctions/StringUtils.ostw";
import "./HelperFunctions/InfoUtils.ostw";

/*
*  @name        LogRoundStart
*  @description Inital logs for round start
*/
rule: "LogRoundStart"
    if(IsGameInProgress())
    {
        LogToInspector("[VERSION] Running on version [0.0.4] [Scrim] version");
        if (CurrentGameMode() != GameMode.Control)
        {
            LogToInspector(
                <"[ROUND_START_ALL] Started Round on Map [<0>] with Teams Attacker: <1> , Defender: <2>",
                    CurrentMap(),
                    TeamString(AttackingTeam()),
                    TeamString(DefendingTeam())
                >);
        } else {
            LogToInspector(
                <"[ROUND_START_CONTROL] Started Round on Map [<0>] Stage [<1>] with Teams <2> , <3>",
                    CurrentMap(),
                    ObjectiveIndex(),
                    TeamString(Team.Team1),
                    TeamString(Team.Team2)
                >);
        }
    }

/*
*  @name        LogRoundEndControl
*  @description Inital logs for round end control
*/
rule: "LogRoundEndControl"
    if(Not(IsGameInProgress()))
    if(CurrentGameMode() == GameMode.Control)
    {
        if(TotalTimeElapsed() > 5) {
            LogToInspector(<"[ROUND_END_SCORE] Team [<0>] Won with a score of [<1>] vs Team [<2>] Lost with a score of [<3>]",
                ControlWinningTeam(),
                ControlModeScoringPercentage(ControlWinningTeam()),
                ControlLosingTeam(),
                ControlModeScoringPercentage(ControlLosingTeam())
            >);
            LogToInspector("[ROUND_END]");
        }        
    }

/*
*  @name        LogRoundEndControl
*  @description Inital logs for round end control
*/
rule: "LogRoundEndNonControl"
    if(Not(IsGameInProgress()))
    if(CurrentGameMode() != GameMode.Control)
    {
        if(TotalTimeElapsed() > 5)
        {
            LogToInspector(<"[SCORE_ALL] [<0>] SCORED [<1>]",
                AttackingTeam(),
                TeamScore(AttackingTeam())
            >);
            LogToInspector("[ROUND_END]");
        }
    }